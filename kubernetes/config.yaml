---
apiVersion: "extensions/v1beta1"
kind: Ingress
metadata:
  name: ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/tls-acme: 'true'
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod-cluster-issuer
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
spec:
  tls:
  - secretName: tls-certificate
  rules:
  - host: phpmyadmin.#ENVIRONMENT#.zen.test.thecodingmachine.com
    http:
      paths:
      - path: /
        backend:
          serviceName: phpmyadmin
          servicePort: 80
  - host: api.#ENVIRONMENT#.zen.test.thecodingmachine.com
    http:
      paths:
      - path: /
        backend:
          serviceName: api
          servicePort: 80
  - host: #ENVIRONMENT#.zen.test.thecodingmachine.com
    http:
      paths:
      - path: /
        backend:
          serviceName: platform
          servicePort: 80
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "mysql"
  labels:
    app: "mysql"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "mysql"
  template:
    metadata:
      labels:
        app: "mysql"
    spec:
      containers:
      - name: "mysql"
        image: "mysql:5.7"
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: db-secrets
            optional: false
        args:
        - --ignore-db-dir=lost+found
        - --max_allowed_packet=512M
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-data
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
---
apiVersion: v1
kind: Service
metadata:
  name: "mysql"
spec:
  selector:
    app: "mysql"
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
---
apiVersion: v1
stringData:
  MYSQL_ROOT_PASSWORD: foo
  MYSQL_DATABASE: api
  MYSQL_USER: api
  MYSQL_PASSWORD: foobarfoo
kind: Secret
metadata:
  name: db-secrets
type: Opaque
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "phpmyadmin"
  labels:
    app: "phpmyadmin"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "phpmyadmin"
  template:
    metadata:
      labels:
        app: "phpmyadmin"
    spec:
      containers:
      - name: "phpmyadmin"
        image: "phpmyadmin/phpmyadmin:4.8"
        env:
        - name: PMA_HOST
          value: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: "phpmyadmin"
spec:
  selector:
    app: "phpmyadmin"
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "api"
  labels:
    app: "api"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "api"
  template:
    metadata:
      labels:
        app: "api"
    spec:
      initContainers:
      - name: init-myservice
        image: busybox
        command: ['sh', '-c', 'until nslookup mysql; do echo waiting for mysql; sleep 2; done;']
      containers:
      - name: "api"
        image: "git.thecodingmachine.com:444/tcm-projects/zen-office/api:#ENVIRONMENT#"
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: api-secrets
            optional: false
        env:
        - name: APACHE_DOCUMENT_ROOT
          value: "public"
        - name: DB_HOST
          value: "mysql"
        - name: DB_DATABASE
          value: "api"
        - name: DB_USERNAME
          value: "api"
        - name: APP_URL
          value: "http://api.#ENVIRONMENT#.zen.test.thecodingmachine.com"
        - name: URL_PREFIX
          value: "http://"
        - name: FRONT_URL
          value: "#ENVIRONMENT#.zen.test.thecodingmachine.com"
        - name: PLATFORM_URL
          value: "http://#ENVIRONMENT#.zen.test.thecodingmachine.com"
        - name: MAIL_TO_DEMAND
          value: 'anna@yourzenoffice.com'
        - name: MAIL_FM_SERVICES
          value: 'helpline@fleximgroup.com'
        - name: APP_NAME
          value: "Zen Office"
        - name: APP_KEY
          value: "base64:tz1QvaEt/H44oKjnJ/2GhJcaZclqZLpQvCjru+BufqI="
        - name: PHP_INI_MEMORY_LIMIT
          value: "2g"
        - name: PHP_INI_UPLOAD_MAX_FILESIZE
          value: "200M"
        - name: PHP_EXTENSION_GD
          value: "1"
        - name: PHP_EXTENSION_GETTEXT
          value: "1"
        - name: PHP_INI_POST_MAX_SIZE
          value: "500M"
        - name: MAIL_FROM_ADDRESS
          value: "a.mutin@thecodingmachine.com"
        - name: MAIL_FROM_NAME
          value: "Anna de Zen Office [RECETTE]"
        - name: MAIL_HOST
          value: "in-v3.mailjet.com"
        - name: SUPER_USER_MAIL
          value: "superuser@tcm.com"
        - name: SEARCH_LOGS_LIMIT
          value: "6"
        - name: STR_SK_EUR
          value: "#STR_SK_EUR#"
        - name: STR_SK_CHF
          value: "#STR_SK_CHF#"
        - name: STARTUP_COMMAND_1
          value: "php artisan storage:link"
        - name: CRON_USER
          value: "root"
        - name: CRON_SCHEDULE
          value: "* * * * *"
        - name: CRON_COMMAND
          value: "php artisan schedule:run >> /dev/null 2>&1"
        volumeMounts:
          - mountPath: /var/www/html/storage/app/public
            name: api-data
      imagePullSecrets:
      - name: "tcmregistry"
      volumes:
        - name: api-data
          persistentVolumeClaim:
            claimName: api-data
---
apiVersion: v1
kind: Service
metadata:
  name: "api"
spec:
  selector:
    app: "api"
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
stringData:
  DB_PASSWORD: "#DB_PASSWORD#"
  MAIL_USERNAME: "#MAIL_USERNAME#"
  MAIL_PASSWORD: "#MAIL_PASSWORD#"
kind: Secret
metadata:
  name: api-secrets
type: Opaque
---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "platform"
  labels:
    app: "platform"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "platform"
  template:
    metadata:
      labels:
        app: "platform"
    spec:
      containers:
      - name: "platform"
        image: "git.thecodingmachine.com:444/tcm-projects/zen-office/platform:#ENVIRONMENT#"
        imagePullPolicy: Always
      imagePullSecrets:
      - name: "tcmregistry"
---
apiVersion: v1
kind: Service
metadata:
  name: "platform"
spec:
  selector:
    app: "platform"
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: api-#ENVIRONMENT#-cert
spec:
  secretName: tls-certificate
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: api.#ENVIRONMENT#.zen.test.thecodingmachine.com
  acme:
    config:
    - http01: {}
      domains:
      - api.#ENVIRONMENT#.zen.test.thecodingmachine.com
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
    - kubernetes.io/pvc-protection
  name: mysql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  finalizers:
    - kubernetes.io/pvc-protection
  name: api-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi


